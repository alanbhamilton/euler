// Each new term in the Fibonacci sequence is generated by adding the previous two terms.
// By starting with 1 and 2, the first 10 terms will be:
//
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
// By considering the terms in the Fibonacci sequence whose values do not exceed four million,
// find the sum of the even-valued terms.

package main

import (
	"fmt"
	"math"
)

func fibonacci(limit int) {
	a, b := 1, 1
	fmt.Println(a)
	for b <= limit {
		fmt.Println(b)
		a, b = b, a+b
	}
}

func sumEvenFib(n1, n2, sumEven int) int {
	sum := n1 + n2
	if sum > 4000000 {
		return sumEven
	}
	if math.Mod(float64(sum), 2) == 0 {
		sumEven += sum
	}
	return sumEvenFib(n2, sum, sumEven)
}

func main() {
  // fmt.Println("result: ", sumEvenFib(1, 1, 0))
  fibonacci(1000)
}
